# "org" ensures this Service is used with the correct Serverless Framework Access Key.
# https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml
org: 899999
frameworkVersion: "^3.0"
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: qr-coder
service: qr-coder
provider:
  iam:
    role:
      # Add statements to the IAM role to give permissions to Lambda functions
      statements:
        - Effect: Allow
          Action:
            - 'cloudfront:*'
          Resource: '*'
        - Effect: Allow
          Action:
            - 's3:*'
          Resource: '*'
  name: aws
  runtime: python3.10
  stage: dev
  region: us-east-1
  logs:
    httpApi: true
    restApi:
      role: ${self:custom.cloudwatchRole}

package:
  individually: true
  exclude:
    - .env
    - .git/**
    - .github/**
    - .serverless/**
    - .cache/**
    - .pytest_cache/**
    - node_modules/**
  include:
    - '*.py'
    - 'requirements,txt'


plugins:
  - serverless-wsgi
  - serverless-python-requirements
  - serverless-prune-plugin
  - serverless-api-compression
resources:
  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
functions:
  app:
    handler: wsgi_handler.handler
    environment:
      SECRET_KEY: ${ssm:/aws/reference/secretsmanager/prod/qr-coder/django/secret-key}
      DEBUG: False
      AWS_S3_BUCKET_NAME: "free-qrcoder-content"
      STATIC_STORAGE_CLASS: "storages.backends.s3boto3.S3Boto3Storage"
    timeout: 90
    events:
      - httpApi: '*'
      #- http: ANY /
      #  path: /
      #- http: 'ANY /{proxy+}'
custom:
  bucketName: free-qrcoder-content
  contentCompression: 512
  cloudwatchRole: arn:aws:iam::890742588543:role/ApiGatewayAccountLogging
  pythonRequirements:
    dockerizePip: true
    zip: true
    filename: requirements.txt
    usePoetry: false
  wsgi:
    app: qrcoder.wsgi.application
    packRequirements: false
  prune:
    automatic: true
    number: 3
